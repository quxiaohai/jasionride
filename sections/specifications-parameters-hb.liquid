<style>
    #shopify-section-{{ section.id }} {
      --section-padding-top: {{ section.settings.padding_top }}px;
      --section-padding-bottom: {{ section.settings.padding_bottom }}px;
      {%- render 'section-variables', section: section -%}
    }
</style>



    {% assign tab_arr = "" %}
    {%- for block in section.blocks -%}
      {% assign bk_stts = block.settings %}
      {% assign tab_arr = tab_arr | append: bk_stts.order_title | append: "," %}
    {%- endfor -%}
    {% assign tabs = tab_arr | split: "," | uniq %}

<div class="section section--padding{% if section.settings.divider %} section--divider{% endif %}{% if section.settings.rounded %} section--rounded relative{% endif %}">
  <div class="page-width{% if section.settings.full_width %} page-width--full{% endif %} relative">
    {%- render 'section-heading', section: section -%}


    <tabs-element >
      <div class="flex gap-4 -md:tw-gap-2 tw-mb-6 tw-overflow-x-auto">
        {% for tab in tabs %}
        <button class="tab__item tw-text-black button md:tw-text-lg tw-text-sm tw-shrink-0 -md:tw-p-2 {% if forloop.first %} button--primary{% else %} button--secondary{% endif %} whitespace-nowrap" {% if forloop.first %} disabled{% endif %} role="tab" type="button" is="hover-button" 
          anchor-target="{{ tab | handle }}_{{ section.id }}" aria-controls="TabPanel-{{ tab | handle }}_{{ section.id }}" >
          {{tab}}
        </button>
        {% endfor %}
      </div>

      <div>
      {% for tab in tabs %}
        <div id="TabPanel-{{ tab | handle }}_{{ section.id }}" role="tabpanel"{% unless forloop.first %} hidden{% endunless %}>
          {% for block in section.blocks %}
          {% assign bk_stts = block.settings %}
          {% assign item_justify = bk_stts.item_justify %}
          {% if bk_stts.order_title == tab %}
          {% assign list_arr = bk_stts.list  | strip | newline_to_br | strip_newlines | split: "<br />"  %}
          {% if block.type == "img_list" %}
            <div class="tw-flex -md:tw-flex-col tw-items-center tw-gap-6">
              {% if bk_stts.img != blank %}
              <style>
                @media screen and (min-width: 769px) {
                    #img_{{ block.id }} { width:{{ bk_stts.img_w }}% }
                    {% if bk_stts.img != blank %}
                    #list_{{ block.id }} { padding-left:{{ bk_stts.img_w | times:0.1 }}% }
                    {% endif %}
                }
              </style>
              <div id="img_{{ block.id }}" class="tw-rounded-2xl tw-overflow-hidden">
                {{ bk_stts.img | image_url: width: '1440' | image_tag: width: '1440,750,500', class:'tw-mx-auto tw-block'}} 
              </div>
              {% endif %}
              {% if bk_stts.list != blank %}
              <div id="list_{{ block.id }}" class="tw-flex-1 tw-w-full ">
                {% case bk_stts.list_col %}
                  {% when '1' %}
                    {% assign list_col = "md:tw-grid-cols-1 md:tw-text-lg" %}
                    {% assign key_w = "md:tw-min-w-[300px]" %}
                  {% when '2' %}
                    {% assign list_col = "md:tw-grid-cols-2 tw-gap-x-4" %}
                    {% assign key_w = "md:tw-min-w-[240px] tw-w-[130px] -md:tw-shrink-0" %}
                  {% else %}
                    {% assign list_col = "md:tw-grid-cols-3 tw-gap-x-4" %}
                    {% assign key_w = "md:tw-min-w-[200px]" %}
                {% endcase %}

                <div class="tw-grid {{list_col}} -md:tw-text-sm">
                  {% for item in list_arr %}
                  {% assign parts = item | split: '|' %}
                  {% assign number = parts[0] %}
                  {% assign key = parts[1] %}
                  {% assign val = parts[2] %}
                  {% assign tips = parts[3] %}
                  
                  <div class="tw-flex {{item_justify | split: '|' | first}} tw-items-center tw-gap-6 md:tw-p-4 tw-p-2 -md:tw-px-0 tw-transition-all {% if bk_stts.list_border %}tw-border-solid tw-border-0 tw-border-b tw-border-viGray-300{% endif %} {% unless forloop.first %}tw-group md:hover:tw-bg-viGray-200 {% endunless %}">
                    <p class="tw-font-medium tw-flex tw-items-center tw-gap-2 {{ key_w }}">
                      {% if number != blank %}
                      <span class="tw-rounded-full tw-shrink-0 tw-bg-viGray-300 tw-flex tw-items-center tw-justify-center tw-h-8 tw-w-8 inline-block group-hover:tw-bg-vi tw-transition-all">{{number}}</span>
                      {% endif %}
                      <span>{{key}}</span>
                    </p>
                    <p class=" {{item_justify | split: '|' | last}}">
                      <span class="tw-wrap-anywhere ">{{val}}</span>
                      {% if tips != blank %}
                      <br><span class="tw-text-viGray-500">{{tips}}</span>
                      {% endif %}
                    </p>
                  </div>
                  {% endfor %}
                </div>
              </div>
              {% endif %}
            </div>
          {% else %}
            {% capture cols_cls %}
              {% case bk_stts.cols %} {% when "6" %} xl:tw-grid-cols-6 {% when "8" %} xl:tw-grid-cols-8 {% when "10" %} xl:tw-grid-cols-10 {% when "12" %} xl:tw-grid-cols-12{% endcase %}
            {% endcapture %}
            {% capture cols_cls_mb %}
              {% case bk_stts.cols_mb %} {% when "4" %} tw-grid-cols-4 {% when "3" %} tw-grid-cols-3 {% when "2" %} tw-grid-cols-2 {% endcase %}
            {% endcapture %}

            <div class="{{ cols_cls | strip }} {{ cols_cls_mb | strip }} md:tw-grid-cols-6  grid md:tw-gap-4 tw-gap-2">
              {% for i in (1..12) %}
                {% assign img_key = 'img_' | append: i %}
                {% if bk_stts[img_key] != blank %}
                  <div>
                    <div class="tw-border-solid tw-border-viGray-300 tw-rounded-xl tw-p-2 tw-border">
                      {{ bk_stts[img_key] | image_url: width: '325' | image_tag: width: '500'}}
                    </div>
                    {% if bk_stts.use_text %}
                      <p class="tw-text-center tw-mt-2 tw-text-sm tw-leading-tight">{{ bk_stts[img_key].alt }}</p>
                    {% endif %}
                  </div>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}


          {% endif %}
          {% endfor %}
        </div>
      {% endfor %}
      </div>

    </tabs-element>
    





    

  </div>
</div>

{% schema %}
{
  "name": "Spec & Par (hb)",
  "max_blocks": 8,
  "settings": [
    {
      "type": "header",
      "content": "t:sections.global.settings.header__heading.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.global.settings.heading.label",
      "default": "Specifications and parameters"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "title-sm",
          "label": "t:sections.global.settings.heading_size.options__1.label"
        },
        {
          "value": "title-md",
          "label": "t:sections.global.settings.heading_size.options__2.label"
        },
        {
          "value": "title-lg tracking-heading",
          "label": "t:sections.global.settings.heading_size.options__3.label"
        },
        {
          "value": "title-xl tracking-heading",
          "label": "t:sections.global.settings.heading_size.options__4.label"
        }
      ],
      "default": "title-md",
      "label": "t:sections.global.settings.heading_size.label"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "t:sections.global.settings.heading_alignment.label",
      "options": [
        {
          "value": "text-left md:items-end md:flex-row",
          "label": "t:sections.global.settings.heading_alignment.options__1.label"
        },
        {
          "value": "text-center md:items-center",
          "label": "t:sections.global.settings.heading_alignment.options__2.label"
        },
        {
          "value": "text-right md:items-end md:flex-row-reverse",
          "label": "t:sections.global.settings.heading_alignment.options__3.label"
        }
      ],
      "default": "text-left md:items-end md:flex-row"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
          "value": "h1",
          "label": "t:sections.global.settings.heading_tag.options__1.label"
        },
        {
          "value": "h2",
          "label": "t:sections.global.settings.heading_tag.options__2.label"
        },
        {
          "value": "h3",
          "label": "t:sections.global.settings.heading_tag.options__3.label"
        },
        {
          "value": "h4",
          "label": "t:sections.global.settings.heading_tag.options__4.label"
        },
        {
          "value": "h5",
          "label": "t:sections.global.settings.heading_tag.options__5.label"
        },
        {
          "value": "h6",
          "label": "t:sections.global.settings.heading_tag.options__6.label"
        },
        {
          "value": "div",
          "label": "t:sections.global.settings.heading_tag.options__7.label"
        },
        {
          "value": "span",
          "label": "t:sections.global.settings.heading_tag.options__8.label"
        },
        {
          "value": "p",
          "label": "t:sections.global.settings.heading_tag.options__9.label"
        }
      ],
      "default": "h2",
      "label": "t:sections.global.settings.heading_tag.label",
      "info": "t:sections.global.settings.heading_tag.info"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.global.settings.subheading.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.global.settings.description.label"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__highlight.content",
      "info": "t:sections.global.settings.header__highlight.info"
    },
    {
      "type": "select",
      "id": "highlighted_text",
      "options": [
        {
          "value": "none",
          "label": "t:sections.global.settings.highlighted_text.options__1.label"
        },
        {
          "value": "text",
          "label": "t:sections.global.settings.highlighted_text.options__2.label"
        },
        {
          "value": "full_text",
          "label": "t:sections.global.settings.highlighted_text.options__3.label"
        },
        {
          "value": "half_text",
          "label": "t:sections.global.settings.highlighted_text.options__4.label"
        },
        {
          "value": "underline",
          "label": "t:sections.global.settings.highlighted_text.options__5.label"
        },
        {
          "value": "stencil",
          "label": "t:sections.global.settings.highlighted_text.options__6.label"
        },
        {
          "value": "scribble",
          "label": "t:sections.global.settings.highlighted_text.options__7.label"
        }
      ],
      "default": "none",
      "label": "t:sections.global.settings.highlighted_text.label"
    },
    {
      "type": "select",
      "id": "highlighted_scribble",
      "options": [
        {
          "value": "circle",
          "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
        },
        {
          "value": "basic-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
        },
        {
          "value": "sketch-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
        },
        {
          "value": "squiggle-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
        },
        {
          "value": "squiggle-underline-2",
          "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
        }
      ],
      "default": "circle",
      "label": "t:sections.global.settings.highlighted_scribble.label",
      "info": "t:sections.global.settings.highlighted_scribble.info"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__colors.content",
      "info": "t:sections.global.settings.header__colors.info"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "t:sections.global.settings.color_text.label"
    },
    {
      "type": "color",
      "id": "color_background",
      "label": "t:sections.global.settings.color_background.label"
    },
    {
      "type": "color_background",
      "id": "gradient_background",
      "label": "t:sections.global.settings.gradient_background.label"
    },
    {
      "type": "color",
      "id": "color_highlight",
      "label": "t:sections.global.settings.color_highlight.label"
    },
    {
      "type": "color_background",
      "id": "gradient_highlight",
      "label": "t:sections.global.settings.gradient_highlight.label"
    },
    {
      "type": "color",
      "id": "color_button_text",
      "label": "t:sections.global.settings.color_button_text.label"
    },
    {
      "type": "color",
      "id": "color_button_background",
      "label": "t:sections.global.settings.color_button_background.label"
    },
    {
      "type": "color_background",
      "id": "color_button_gradient",
      "label": "t:sections.global.settings.color_button_gradient.label"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__section.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_top.label",
      "default": 72
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_bottom.label",
      "default": 72
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "t:sections.global.settings.divider.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.global.settings.full_width.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "rounded",
      "default": false,
      "label": "t:sections.global.settings.rounded.label"
    }
  ],
  "blocks": [ 
    {
      "type": "img_list",
      "name": "Image & list",
      "settings": [
        {
          "type": "header",
          "content": "Tab settings"
        },
        {
          "type": "text",
          "id": "order_title",
          "label": "Order title",
          "default": "Geometry"
        },
        {
          "type": "header",
          "content": "Content settings"
        },
        {
          "type": "image_picker",
          "id": "img",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "img_w",
          "min": 25,
          "max": 75,
          "step": 1,
          "unit": "%",
          "label": "Image width",
          "default": 50
        },
        {
          "type": "textarea",
          "id": "list",
          "label": "List",
          "info": "enter to return"
        },
        {
          "type": "select",
          "id": "item_justify",
          "label": "Item justify",
          "options": [
            {
            "value": "tw-justify-between",
            "label": "Between"
            },
            {
            "value": "tw-justify-start",
            "label": "Left"
            }
          ],
          "default": "tw-justify-between",
        },
        {
          "type": "checkbox",
          "id": "list_border",
          "label": "Has list border",
          "default": true
        },
        {
          "type": "select",
          "id": "list_col",
          "label": "List cols",
          "options": [
            {
            "value": "1",
            "label": "1"
            },
            {
            "value": "2",
            "label": "2"
            },
            {
            "value": "3",
            "label": "3"
            }
          ],
          "default": "1"
        },
      ]
    },
    {
      "type": "package",
      "name": "Package",
      "settings": [
        {
          "type": "header",
          "content": "Tab settings"
        },
        {
          "type": "text",
          "id": "order_title",
          "label": "Order title",
          "default": "Geometry"
        },
        {
          "type": "select",
          "id": "cols",
          "label": "columns",
          "options": [
            { "value": "6", "label": "6" },
            { "value": "8", "label": "8" },
            { "value": "10", "label": "10" },
            { "value": "12", "label": "12" },
          ],
          "default": "10",
        },
        {
          "type": "select",
          "id": "cols_mb",
          "label": "columns",
          "options": [
            { "value": "4", "label": "4" },
            { "value": "3", "label": "3" },
            { "value": "2", "label": "2" },
          ],
          "default": "3",
        },
        {
          "type": "checkbox",
          "id": "use_text",
          "label": "Show image text",
          "default": false,
          "info": "image content user alt"
        },
        { "type": "image_picker", "id": "img_1", "label": "Image" },
        { "type": "image_picker", "id": "img_2", "label": "Image" },
        { "type": "image_picker", "id": "img_3", "label": "Image" },
        { "type": "image_picker", "id": "img_4", "label": "Image" },
        { "type": "image_picker", "id": "img_5", "label": "Image" },
        { "type": "image_picker", "id": "img_6", "label": "Image" },
        { "type": "image_picker", "id": "img_7", "label": "Image" },
        { "type": "image_picker", "id": "img_8", "label": "Image" },
        { "type": "image_picker", "id": "img_9", "label": "Image" },
        { "type": "image_picker", "id": "img_10", "label": "Image" },
        { "type": "image_picker", "id": "img_11", "label": "Image" },
        { "type": "image_picker", "id": "img_12", "label": "Image" },
      ]
    }
  ],
  "presets": [
    {
      "name": "Spec & Par (hb)"
    }
  ],
  "disabled_on": {
    "templates": [
      "password"
    ]
  }
}
{% endschema %}
